typedef struct Maps
{
    char** Map;
    int* lenght;
    int* height;
    int* choosen;
}Maps;
typedef struct Player{
    char playerNumber;
    int* bombsNumber;
    int* bombRange;
    int* lifes;
    int* x;
    int* y;
    int* turn;
    int* bombKick;
}Player;
void color(int t,int f);
void choose_mode();
void placePlayers(int nbPlayers,char** map,int lenght, int height);
void chooseMaps(Maps** mapsArray,int nbMaps,int mode);
void printMap(char** map, int lenght, int height);
void playMap(char** MapToPlay,int lenght, int height, int nbPlayers);
void moveUp(char playerNumber,int* x, int y,char** MapToPlay,int lenght);
void moveDown(char playerNumber,int* x, int y,char** MapToPlay, int lenght);
void moveRight(char playerNumber, int x,int* y,char** MapToPlay, int height);
void moveLeft(char playerNumber, int x,int* y,char** MapToPlay, int height);
void exploseBomb(Player** player, int x,int y,int nbPlayers,int* alive,char** MapToPlay,int lenght,int height);
void exploseUp(Player** player,  int x, int y,int nbPlayers,int* alive,char** MapToPlay, int lenght);
void exploseDown(Player** player, int x, int y,int nbPlayers,int* alive,char** MapToPlay);
void exploseLeft(Player** player,int x, int y,int nbPlayers,int* alive,char** MapToPlay );
void exploseRight(Player** player,  int x, int y,int nbPlayers,int* alive,char** MapToPlay, int height);
void bombKick(Player **player,  int x, int y,int nbPlayers,int* alive,char** MapToPlay);
void giveGift(Player* player);
void passTurn(Player **playersArray, int * i);
void readCommand(char** MapToPlay, int lenght,int height,int nbPlayers,Player **playersArray,int * alivePlayers,int command, int i );
int findX(char playerNumber, char** map,  int length, int height);
int findY(char playerNumber, char** map,  int length, int height);
char** createMap(int lenght,int height,int nbPlayers);
Player** initPlayers(int nbPlayers);
Player* createPlayer();
Maps** createRandomMaps(int mode);
int generateCommande(char** MapToPlay, int lenght,int height ,Player **playersArray ,int i);
char scanDown(int x, int y,char** MapToPlay, int lenght );
char scanUp(int x, int y,char** MapToPlay );
char scanLeft(int x, int y,char** MapToPlay ) ;
char scanRight(int x, int y,char** MapToPlay, int height );
void playMapComputer(char** MapToPlay,int lenght, int height, int nbPlayers);
void swap(int *a, int *b);
void sort(int array[], int n);